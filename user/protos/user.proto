// Proto file for user service

syntax = "proto3";

package user;

import "blog/protos/blog.proto";

service User {
    // Getting methods --------------------------------------------------------------------
    rpc GetUserByUsername(GetUserByUsernameRequest) returns (GetUserByUsernameResponse) {}
    rpc GetUserPosts(GetUserPostsRequest) returns (GetUserPostsResponse) {}
    rpc GetUserComments(GetUserCommentsRequest) returns (GetUserCommentsResponse) {}
    rpc GetUserLikedPosts(GetUserLikedPostsRequest) returns (GetUserLikedPostsResponse) {}
    // Processing methods -----------------------------------------------------------------
    rpc UpdateUser(UpdateUserRequest) returns (blog.StatusResponse) {}
    rpc DeleteUser(DeleteUserRequest) returns (blog.StatusResponse) {}
}

// Structures -----------------------------------------------------------------------------

message UserSchema {
    string email = 1;
    string username = 2;
    string password = 3;
}

message UserDetailSchema {
    int64 id = 1;
    string email = 2;
    string username = 3;
    string created = 4;
}

// Request - responses --------------------------------------------------------------------

// Getting requests - responses -------------------------------------------------

message GetUserByUsernameRequest {
    string username = 1;
}
message GetUserByUsernameResponse {
    UserDetailSchema user = 1;
}

message GetUserPostsRequest {
    string username = 1;
    int64 limit = 2;
    int64 offset = 3;
}
message GetUserPostsResponse {
    repeated blog.PostListSchema posts = 1;
}

message GetUserCommentsRequest {
    string username = 1;
    int64 limit = 2;
    int64 offset = 3;
}
message GetUserCommentsResponse {
    repeated blog.CommentSchema comments = 1;
}

message GetUserLikedPostsRequest {
    string username = 1;
    int64 limit = 2;
    int64 offset = 3;
}
message GetUserLikedPostsResponse {
    repeated blog.PostListSchema posts = 1;
}

// Processing requests ----------------------------------------------------------

message UpdateUserRequest {
    UserSchema user = 2;
}

message DeleteUserRequest {}
